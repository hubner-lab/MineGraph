# Use a base image with conda support
FROM continuumio/miniconda3:24.11.1-0

# Set working directory to root
WORKDIR /

# Install system dependencies including Qt, Cairo, and Rust dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    libz-dev \
    git \
    wget \
    curl \
    samtools \
    libbz2-dev \
    zlib1g-dev \
    liblzma-dev \
    libgl1-mesa-glx \
    libxrender1 \
    libxext6 \
    libx11-6 \
    libcairo2-dev \
    libjpeg-dev \
    libgif-dev \
    pkg-config \
    python3-pip \
    seqtk \
    curl

# Install Rust using rustup (for compiling gretl and fastix)
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set XDG_RUNTIME_DIR to avoid related warnings
ENV XDG_RUNTIME_DIR=/tmp/runtime-root
RUN mkdir -p /tmp/runtime-root && chmod 0700 /tmp/runtime-root

# Install fastix via cargo
RUN cargo install fastix

# Clone the gretl repository and build it using Rust
RUN git clone https://github.com/MoinSebi/gretl.git && \
    cd gretl && \
    cargo build --release && \
    cp target/release/gretl /usr/local/bin/

# Install PGGB, VG, Mash, and bioinformatics tools via Conda
RUN conda config --add channels conda-forge && \
    conda config --add channels bioconda && \
    conda install -y \
    pggb=0.7.2 \
    vg \
    mash \
    raxml-ng \
    numpy \
    pandas \
    biopython \
    matplotlib \
    networkx \
    seaborn \
    pysam

# Install Python libraries from pip
RUN pip install python-igraph ete3 pafpy pycirclize openpyxl pycairo PyQt5 pyvis cyvcf2

# Copy only Python scripts into the container
RUN mkdir src
COPY src/ /src
WORKDIR /src


# Set the entrypoint to use the shell by default
CMD ["/bin/bash"]
